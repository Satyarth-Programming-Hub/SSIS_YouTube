<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/22/2021 7:28:07 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP-TG14SPMU"
  DTS:CreatorName="LAPTOP-TG14SPMU\SarojSatyarth"
  DTS:DTSID="{5EA8A430-EB9A-424A-ADA5-3E100DCB9D60}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.167"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package4"
  DTS:PackageType="5"
  DTS:VersionBuild="4"
  DTS:VersionGUID="{DEBD79EE-6AAA-4C9C-978B-521B95D1590A}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{09F40697-82E2-48C6-9DD8-C6952C5C7BC2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailFrom">
      <DTS:VariableValue
        DTS:DataType="8">sender email</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F0CA72DD-9FBE-4ACF-86A4-50B6EC0EDB48}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailFromPass">
      <DTS:VariableValue
        DTS:DataType="8">**************</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{19B2F84C-7549-4389-AA06-9F4DB05C2E62}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailTo">
      <DTS:VariableValue
        DTS:DataType="8">reciever email</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{159E0DE2-C00D-4A02-8502-712B3E4FC027}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_6a441f605f0c417fbcfb4138853e6e5b"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::EmailFrom,User::EmailFromPass,User::EmailTo">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6a441f605f0c417fbcfb4138853e6e5b.Properties.Settings.get_Default():ST_6a441f605f0c417fbcfb4138853e6e5b.Properties.Sett" +
    "ings")]

namespace ST_6a441f605f0c417fbcfb4138853e6e5b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.Net.Mail;
#endregion

namespace ST_6a441f605f0c417fbcfb4138853e6e5b
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            // TODO: Add your code here
            try
            {
                int ID = 0;
                string Employee_Name = string.Empty;
                string Department = string.Empty; 

                using (DataSet ds = GetEmpData(1))
                {
                    foreach (DataRow row in ds.Tables[0].Rows)
                    {
                        ID = int.Parse(row.ItemArray[0].ToString());
                        Employee_Name = row.ItemArray[1].ToString() + ", " + row.ItemArray[2].ToString();
                        Department = row.ItemArray[8].ToString();
                    }
                }

                SendEmail(ID, Employee_Name, Department);
                MessageBox.Show("Email Sent!!!");
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.TaskResult = (int)ScriptResults.Failure;
                MessageBox.Show("Email was not sent!!!!" + ex.ToString());
            }

        }

        public DataSet GetEmpData(int id)
        {
            string constr = "Data Source=LAPTOP-TG14SPMU; Initial Catalog=SSRSDB;Integrated Security=SSPI;";
            string query = "SELECT * FROM Employee WHERE id=@ID";
            SqlCommand cmd = new SqlCommand(query);
            cmd.Parameters.AddWithValue("@ID", id);

            using (SqlConnection con = new SqlConnection(constr))
            {
                using (SqlDataAdapter da = new SqlDataAdapter())
                {
                    cmd.Connection = con;
                    da.SelectCommand = cmd;
                    using (DataSet employees = new DataSet())
                    {
                        da.Fill(employees, "Employee");
                        return employees;
                    }
                }
            }

        }


        public void SendEmail(int ID, string Employee_Name, string Department)
        {
            string body = string.Empty;
            //string ImagePath = @"D:\Downloads\Documents\Emp.jpg";
            string ImagePath = "https://images.pexels.com/photos/4050315/pexels-photo-4050315.jpeg";
            string ImgWidth = "300";
            string ImgHeight = "300";
            string subject = "**Employee of the Month :  " + DateTime.Now.AddMonths(-1).ToString("MMMM") + "  " + DateTime.Now.Year.ToString() + "  **";
            string EmailFrom = Dts.Variables["User::EmailFrom"].Value.ToString();
            string EmailFromPass = Dts.Variables["User::EmailFromPass"].Value.ToString();
            string EmailTo = Dts.Variables["User::EmailTo"].Value.ToString();

            string smtpServer = "smtp.gmail.com";
            int portNumber = 587;
            bool enableSSL = true;

            using (MailMessage mail = new MailMessage())
            {
                mail.From = new MailAddress(EmailFrom);
                mail.To.Add(EmailTo);
                mail.Subject = subject;
                mail.IsBodyHtml = true;

                mail.Body += "<html><head><title>**Employee of the Month Award**</title></head>";
                mail.Body += "<body> Hi Team,<br/><br/>Best Employee for the Month of  <strong>" + DateTime.Now.AddMonths(-1).ToString("MMMM") + "  " + DateTime.Now.Year.ToString() + "</strong><br/>";
                mail.Body += "Employee ID: " + ID + "<br/>";
                mail.Body += "Employee Name: " + Employee_Name + "<br />";
                mail.Body += "Department: " + Department + " <br/>";
                mail.Body += "Photo <br/>";
                mail.Body += "<img src=" + ImagePath + " width=" + ImgWidth + " height=" + ImgHeight + ">";
                mail.Body += "<br/><br/>";
                mail.Body += "Best wishes " + Employee_Name + "! keep doing good work!!!";
                mail.Body += "<br/><br/>";
                mail.Body += "Many Thanks & amp; Regards,<br/>";
                mail.Body += "Satyarth Programming Hub <br/>";
                mail.Body += "Subscribe to this awosome Channel!!!</body>";
                mail.Body += "</html>";

                using (SmtpClient smpt = new SmtpClient(smtpServer, portNumber))
                {
                    smpt.Credentials = new System.Net.NetworkCredential(EmailFrom, EmailFromPass);
                    smpt.EnableSsl = enableSSL;
                    smpt.Send(mail);
                }
            }
            

        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6a441f605f0c417fbcfb4138853e6e5b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6a441f605f0c417fbcfb4138853e6e5b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6a441f605f0c417fbcfb4138853e6e5b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_6a441f605f0c417fbcfb4138853e6e5b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_6a441f605f0c417fbcfb4138853e6e5b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_6a441f605f0c417fbcfb4138853e6e5b</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_6a441f605f0c417fbcfb4138853e6e5b</msb:DisplayName>
    <msb:ProjectId>{26E974DD-1CF0-420A-866B-AC08996B4B0A}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_6a441f605f0c417fbcfb4138853e6e5b.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_6a441f605f0c417fbcfb4138853e6e5b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_6a441f605f0c417fbcfb4138853e6e5b")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ST_6a441f605f0c417fbcfb4138853e6e5b.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{1AAC4462-D474-47F1-BACC-534CB10B9299}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_6a441f605f0c417fbcfb4138853e6e5b</RootNamespace>
    <AssemblyName>ST_6a441f605f0c417fbcfb4138853e6e5b</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <BinaryItem
            Name="ST_6a441f605f0c417fbcfb4138853e6e5b.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJV2+mAAAAAAAAAAAOAAIiALATAAACAAAAAIAAAAAAAAvj4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGw+AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAxB4AAAAgAAAAIAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAiAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAKAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACg
PgAAAAAAAEgAAAACAAUANCYAAIAXAAABAAAAAAAAALQ9AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBAD+AAAAAQAAERYKfhAAAAoLfhAAAAoMAhcoAgAABg0J
bxEAAAoWbxIAAApvEwAACm8UAAAKEwQrWBEEbxUAAAp0EQAAARMFEQVvFgAAChaabxcAAAooGAAA
CgoRBW8WAAAKF5pvFwAACnIBAABwEQVvFgAAChiabxcAAAooGQAACgsRBW8WAAAKHppvFwAACgwR
BG8aAAAKLZ/eFREEdRIAAAETBhEGLAcRBm8bAAAK3N4KCSwGCW8bAAAK3AIGBwgoAwAABnIHAABw
KBwAAAomAigdAAAKFm8eAAAK3icTBwIoHQAAChdvHgAACnIjAABwEQdvFwAACigfAAAKKBwAAAom
3gAqAAABKAAAAgAuAGWTABUAAAAAAgAWAJSqAAoAAAAAAAAAANbWACcTAAABGzAEAHoAAAACAAAR
clEAAHBy7gAAcHMgAAAKCgZvIQAACnI2AQBwA4woAAABbyIAAAomcyMAAAoLcyQAAAoMBgdvJQAA
CggGbyYAAApzJwAACg0ICXI+AQBwbygAAAomCRME3h4JLAYJbxsAAArcCCwGCG8bAAAK3AcsBgdv
GwAACtwRBCoAAAEoAAACAEcAElkACgAAAAACADMAMGMACgAAAAACAC0AQG0ACgAAAAAbMAYAVQMA
AAMAABF+EAAACiZyUAEAcApy1wEAcAty1wEAcAwbjSMAAAElFnLfAQBwoiUXKCkAAAoTChIKFSgq
AAAKEwoSCnIXAgBwKCsAAAqiJRhyIQIAcKIlGSgpAAAKEwoSCigsAAAKEwsSCygtAAAKoiUacicC
AHCiKC4AAAoNAigdAAAKby8AAApyMQIAcG8wAAAKbzEAAApvFwAAChMEAigdAAAKby8AAApyUQIA
cG8wAAAKbzEAAApvFwAAChMFAigdAAAKby8AAApyeQIAcG8wAAAKbzEAAApvFwAAChMGcpUCAHAT
ByBLAgAAEwgXEwlzMgAAChMMEQwRBHMzAAAKbzQAAAoRDG81AAAKEQZvNgAAChEMCW83AAAKEQwX
bzgAAAoRDCVvOQAACnKzAgBwKB8AAApvOgAAChEMEw0RDRyNIwAAASUWEQ1vOQAACqIlF3I4AwBw
oiUYKCkAAAoTChIKFSgqAAAKEwoSCnIXAgBwKCsAAAqiJRlyIQIAcKIlGigpAAAKEwoSCigsAAAK
EwsSCygtAAAKoiUbcr0DAHCiKC4AAApvOgAAChEMJW85AAAKctsDAHAPASgtAAAKcvcDAHAoOwAA
Cm86AAAKEQwlbzkAAApyAwQAcARyIwQAcCg7AAAKbzoAAAoRDCVvOQAACnIxBABwBXJLBABwKDsA
AApvOgAAChEMJW85AAAKclkEAHAoHwAACm86AAAKEQwTDRENHo0jAAABJRYRDW85AAAKoiUXcnEE
AHCiJRgGoiUZcoUEAHCiJRoHoiUbcpUEAHCiJRwIoiUdcqcEAHCiKC4AAApvOgAAChEMJW85AAAK
cqsEAHAoHwAACm86AAAKEQwlbzkAAApywQQAcARy2wQAcCg7AAAKbzoAAAoRDCVvOQAACnKrBABw
KB8AAApvOgAAChEMJW85AAAKcg8FAHAoHwAACm86AAAKEQwlbzkAAApyUQUAcCgfAAAKbzoAAAoR
DCVvOQAACnKPBQBwKB8AAApvOgAAChEMJW85AAAKcucFAHAoHwAACm86AAAKEQcRCHM8AAAKEw4R
DhEEEQVzPQAACm8+AAAKEQ4RCW8/AAAKEQ4RDG9AAAAK3hgRDiwHEQ5vGwAACtwRDCwHEQxvGwAA
CtwqAAAAQTQAAAIAAAAYAwAAJAAAADwDAAAMAAAAAAAAAAIAAADxAAAAVwIAAEgDAAAMAAAAAAAA
AB4CKEEAAAoqHgIoQgAACiqufgEAAAQtHnL3BQBw0AMAAAIoQwAACm9EAAAKc0UAAAqAAQAABH4B
AAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAihGAAAKKi5zCgAABoADAAAEKgAAQlNKQgEAAQAA
AAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAvAUAACN+AAAoBgAAjAgAACNTdHJpbmdzAAAAALQO
AABsBgAAI1VTACAVAAAQAAAAI0dVSUQAAAAwFQAAUAIAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMA
AAD6ATMAFgAAAQAAADcAAAAFAAAABgAAAAsAAAAFAAAARgAAAAIAAAAQAAAAAwAAAAIAAAADAAAA
BAAAAAEAAAAGAAAAAQAAAAEAAAAAAFkEAQAAAAAABgDQAjUGBgBfAzUGBgAcAiIGDwCpBgAABgBJ
AgIFBgCzAgIFBgCUAgIFBgBGAwIFBgDwAgIFBgAJAwIFBgBgAgIFBgB7ApoDCgAkA9wDCgByAdwD
DgCyBzoABgD7BTgHDgA+CDoABgDWAKwEBgCEBawEDgCFAOIHDgB2BeIHDgDsBeIHBgAUAawEEgC3
AD8EEgD4Bz8EBgC8BKwEBgD/ASIGBgCUB6wEBgDBBVUGBgCoBe0EEgDPASkEEgAwAikEEgCpAdgE
BgDkATUGBgC2A6wEDgAUBToADgDDADoADgBVBToADgCOAToABgABAKwEFgBLCCMHFgDGByMHCgAX
BNwDDgAoBeIHDgDRBeIHDgDeBY4FGgD2Bh0BGgDNAB0BEgBiBz8EEgA/BT8EEgAFBKcHEgAaCKcH
BgA9AawEBgDiAKwEBgB6CAIFAAAAAAcAAAAAAAEAAQABABAAzQRRADkAAQABAAAAEABcBrgGcQAB
AAUAAAEQAAAHuAaFAAMACQADAQAAdgcAAGkABAAMABEAwQRHAREAYgFLAREApwBPAQYGMgBTAVaA
WgdWAVaAQgFWAVAgAAAAAIYA0wQGAAEAhCEAAAAAhgBGAFoBAQA0IgAAAACGAE8EYAECAMwlAAAA
AIYYFQYGAAUA1CUAAAAAgxgVBgYABQDcJQAAAACTCL0FZwEFAAgmAAAAAJMISgFsAQUADyYAAAAA
kwhWAXEBBQAXJgAAAACWCLoHdwEGAB4mAAAAAIYYFQYGAAYAJiYAAAAAkRgbBnwBBgAAAAEAggAA
AAEAEAAAAAIABgEAAAMAAwgAAAEAlAMJABUGAQARABUGBgAZABUGCgApABUGEAAxABUGEAA5ABUG
EABBABUGEABJABUGEABRABUGEABZABUGEABhABUGEABpABUGBgDZABUGBgABARUGFQARARUGBgAZ
AYMIKwB5AOcGLgAhAaMENAApAYQHOwA5AQcGQQCBAA4IRgCJAFYISgDhALQDTwBBAckBUwAZAY0H
WACBAC0IXwCRAMEBBgBJAUYIYwBxAG4HagBZAdMHAQAZAY0HcAChABUGEAChAEsHgwBhAYcDiQCp
ABUGEACxABUGBgChAGcFkQCxAJAAlwB5ABUGBgBxAYEEnQC5ADYIugC5AAkHvwC5ALQDxQC5ALQF
ygBBAbQDTwAZAY0HzgBZAfIG1AB5AaME2gCBAX0DRgDBABUGBgCJARUGEADBALME4QDBAKEF6ACR
AX4AEADBAJsHEADBAIYE7gDBAGQITwDBAG0IEAAZAY0H8wDJABUG+wCZARUGAQHJABMHBwHJAJUE
7gDJAKIADgFxABUGBgDhABUGBgCpAfQAFAGpAXYIHQHpABUGIwEJARUGBgAIABQAPQEIABgAQgEp
AHMAtwEuAAsAjwEuABMAmAEuABsAtwEuACMAwAEuACsA6QEuADMA6QEuADsA6QEuAEMAwAEuAEsA
7wEuAFMA6QEuAFsABgJDAGMAQgFJAHMAtwFhAHsAQgFjAGsAQgEbAHYApAADAAEABAADAAAAwQWA
AQAAagGFAQAAvgeKAQIABgADAAIABwAFAAEACAAFAAIACQAHAASAAAABAAAAwh62XgAAAAAAAFEA
AAAEAAAAAAAAAAAAAAArAXUAAAAAAA4AAAAAAAAAAAAAADQBvQMAAAAABAAAAAAAAAAAAAAAKwE6
AAAAAAAEAAAAAAAAAAAAAAArAawEAAAAAAQAAAAAAAAAAAAAACsBIwcAAAAADgAAAAAAAAAAAAAA
NAETAAAAAAAAAAAAAQAAAGYGAAAFAAIAAAAAAABJbnQzMgA8TW9kdWxlPgBJRABNaWNyb3NvZnQu
U3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBTeXN0ZW0uRGF0YQBHZXRFbXBEYXRhAFNUXzZh
NDQxZjYwNWYwYzQxN2ZiY2ZiNDEzODg1M2U2ZTViAG1zY29ybGliAEFkZABpZABTcWxDb21tYW5k
AHNldF9TZWxlY3RDb21tYW5kAFNlbmQAZGVmYXVsdEluc3RhbmNlAE1haWxNZXNzYWdlAERhdGFU
YWJsZQBWYXJpYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhh
bmRsZQBFbXBsb3llZV9OYW1lAERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRp
bWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBW
U1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UASW50ZXJuYWxEYXRhQ29sbGVjdGlvbkJhc2UAQXBw
bGljYXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBQYXJzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBD
b21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERl
YnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVB
dHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmli
dXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0
cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0
cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2lu
dEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlB
dHRyaWJ1dGUAZ2V0X1ZhbHVlAEFkZFdpdGhWYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJz
aW9uaW5nAFRvU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAE5ldHdvcmtDcmVkZW50aWFsAFNjcmlwdE9i
amVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTeXN0ZW0uTmV0Lk1haWwAU2VuZEVtYWls
AFNUXzZhNDQxZjYwNWYwYzQxN2ZiY2ZiNDEzODg1M2U2ZTViLmRsbABGaWxsAHNldF9Jc0JvZHlI
dG1sAHNldF9FbmFibGVTc2wAZ2V0X0l0ZW0AU3lzdGVtAHNldF9Gcm9tAEVudW0AcmVzb3VyY2VN
YW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBT
eXN0ZW0uUmVmbGVjdGlvbgBEYXRhVGFibGVDb2xsZWN0aW9uAFNxbFBhcmFtZXRlckNvbGxlY3Rp
b24ATWFpbEFkZHJlc3NDb2xsZWN0aW9uAERhdGFSb3dDb2xsZWN0aW9uAHNldF9Db25uZWN0aW9u
AFNxbENvbm5lY3Rpb24ARXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBnZXRfVG8AQ3VsdHVy
ZUluZm8AZ2V0X1llYXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBTcWxQYXJhbWV0ZXIARGJEYXRhQWRh
cHRlcgBTcWxEYXRhQWRhcHRlcgBJRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3Rv
cgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0
ZW0uUmVzb3VyY2VzAFNUXzZhNDQxZjYwNWYwYzQxN2ZiY2ZiNDEzODg1M2U2ZTViLlByb3BlcnRp
ZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF82YTQ0MWY2MDVmMGM0MTdm
YmNmYjQxMzg4NTNlNmU1Yi5Qcm9wZXJ0aWVzAGdldF9UYWJsZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0
aW5ncwBBZGRNb250aHMAc2V0X0NyZWRlbnRpYWxzAFN5c3RlbS5XaW5kb3dzLkZvcm1zAFN5c3Rl
bS5Db2xsZWN0aW9ucwBnZXRfUGFyYW1ldGVycwBTdWNjZXNzAE1haWxBZGRyZXNzAGdldF9EdHMA
U2NyaXB0UmVzdWx0cwBnZXRfUm93cwBDb25jYXQAT2JqZWN0AHNldF9TdWJqZWN0AFN5c3RlbS5O
ZXQARGF0YVNldABnZXRfRGVmYXVsdABEaWFsb2dSZXN1bHQAc2V0X1Rhc2tSZXN1bHQAU3lzdGVt
LkRhdGEuU3FsQ2xpZW50AFNtdHBDbGllbnQARGVwYXJ0bWVudABnZXRfQ3VycmVudABJQ3JlZGVu
dGlhbHNCeUhvc3QATW92ZU5leHQAZ2V0X05vdwBEYXRhUm93AFNob3cATWVzc2FnZUJveABnZXRf
SXRlbUFycmF5AGdldF9Cb2R5AHNldF9Cb2R5AGdldF9Bc3NlbWJseQBFbXB0eQAAAAAABSwAIAAA
G0UAbQBhAGkAbAAgAFMAZQBuAHQAIQAhACEAAC1FAG0AYQBpAGwAIAB3AGEAcwAgAG4AbwB0ACAA
cwBlAG4AdAAhACEAIQAhAACAm0QAYQB0AGEAIABTAG8AdQByAGMAZQA9AEwAQQBQAFQATwBQAC0A
VABHADEANABTAFAATQBVADsAIABJAG4AaQB0AGkAYQBsACAAQwBhAHQAYQBsAG8AZwA9AFMAUwBS
AFMARABCADsASQBuAHQAZQBnAHIAYQB0AGUAZAAgAFMAZQBjAHUAcgBpAHQAeQA9AFMAUwBQAEkA
OwABR1MARQBMAEUAQwBUACAAKgAgAEYAUgBPAE0AIABFAG0AcABsAG8AeQBlAGUAIABXAEgARQBS
AEUAIABpAGQAPQBAAEkARAAAB0AASQBEAAARRQBtAHAAbABvAHkAZQBlAACAhWgAdAB0AHAAcwA6
AC8ALwBpAG0AYQBnAGUAcwAuAHAAZQB4AGUAbABzAC4AYwBvAG0ALwBwAGgAbwB0AG8AcwAvADQA
MAA1ADAAMwAxADUALwBwAGUAeABlAGwAcwAtAHAAaABvAHQAbwAtADQAMAA1ADAAMwAxADUALgBq
AHAAZQBnAAEHMwAwADAAADcqACoARQBtAHAAbABvAHkAZQBlACAAbwBmACAAdABoAGUAIABNAG8A
bgB0AGgAIAA6ACAAIAAACU0ATQBNAE0AAAUgACAAAAkgACAAKgAqAAAfVQBzAGUAcgA6ADoARQBt
AGEAaQBsAEYAcgBvAG0AACdVAHMAZQByADoAOgBFAG0AYQBpAGwARgByAG8AbQBQAGEAcwBzAAAb
VQBzAGUAcgA6ADoARQBtAGEAaQBsAFQAbwAAHXMAbQB0AHAALgBnAG0AYQBpAGwALgBjAG8AbQAA
gIM8AGgAdABtAGwAPgA8AGgAZQBhAGQAPgA8AHQAaQB0AGwAZQA+ACoAKgBFAG0AcABsAG8AeQBl
AGUAIABvAGYAIAB0AGgAZQAgAE0AbwBuAHQAaAAgAEEAdwBhAHIAZAAqACoAPAAvAHQAaQB0AGwA
ZQA+ADwALwBoAGUAYQBkAD4AAICDPABiAG8AZAB5AD4AIABIAGkAIABUAGUAYQBtACwAPABiAHIA
LwA+ADwAYgByAC8APgBCAGUAcwB0ACAARQBtAHAAbABvAHkAZQBlACAAZgBvAHIAIAB0AGgAZQAg
AE0AbwBuAHQAaAAgAG8AZgAgACAAPABzAHQAcgBvAG4AZwA+AAAdPAAvAHMAdAByAG8AbgBnAD4A
PABiAHIALwA+AAAbRQBtAHAAbABvAHkAZQBlACAASQBEADoAIAAACzwAYgByAC8APgAAH0UAbQBw
AGwAbwB5AGUAZQAgAE4AYQBtAGUAOgAgAAANPABiAHIAIAAvAD4AABlEAGUAcABhAHIAdABtAGUA
bgB0ADoAIAAADSAAPABiAHIALwA+AAAXUABoAG8AdABvACAAPABiAHIALwA+AAATPABpAG0AZwAg
AHMAcgBjAD0AAA8gAHcAaQBkAHQAaAA9AAARIABoAGUAaQBnAGgAdAA9AAADPgAAFTwAYgByAC8A
PgA8AGIAcgAvAD4AABlCAGUAcwB0ACAAdwBpAHMAaABlAHMAIAAAMyEAIABrAGUAZQBwACAAZABv
AGkAbgBnACAAZwBvAG8AZAAgAHcAbwByAGsAIQAhACEAAEFNAGEAbgB5ACAAVABoAGEAbgBrAHMA
IAAmACAAYQBtAHAAOwAgAFIAZQBnAGEAcgBkAHMALAA8AGIAcgAvAD4AAD1TAGEAdAB5AGEAcgB0
AGgAIABQAHIAbwBnAHIAYQBtAG0AaQBuAGcAIABIAHUAYgAgADwAYgByAC8APgAAV1MAdQBiAHMA
YwByAGkAYgBlACAAdABvACAAdABoAGkAcwAgAGEAdwBvAHMAbwBtAGUAIABDAGgAYQBuAG4AZQBs
ACEAIQAhADwALwBiAG8AZAB5AD4AAA88AC8AaAB0AG0AbAA+AABxUwBUAF8ANgBhADQANAAxAGYA
NgAwADUAZgAwAGMANAAxADcAZgBiAGMAZgBiADQAMQAzADgAOAA1ADMAZQA2AGUANQBiAC4AUABy
AG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAAAz5ggBpVjbQoKwLZSZG6q2
AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARF9DwcICA4OEj0SQRJFEkkSTQIGDgUgABKAkQYgARKA
lQgFIAASgJkEIAASQQMgABwEIAAdHAMgAA4EAAEIDgYAAw4ODg4DIAACBgABEYCpDgUgABKArQUA
Ag4ODgwHBRJRElUSWRI9Ej0FIAASgLEHIAISgLUOHAUgAQESVQUgAQESUQYgAggSPQ4VBw8ODg4O
Dg4ODggCEV0IEmESYRJlBAAAEV0FIAERXQgEIAEODgMgAAgFAAEOHQ4FIAASgL0GIAESgMEcBiAB
ARKAxQUgABKAyQQgAQECBwAEDg4ODg4FIAIBDggFIAIBDg4GIAEBEoDRBSABARJhCAABEoDVEYDZ
BSAAEoDdByACAQ4SgN0It3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSdQMGEnkDBhIQAgYI
AwYRFAUgARI9CAYgAwEIDg4EAAASdQQAABJ5BQABARJ5BAAAEhADAAABBAgAEnUECAASeQQIABIQ
CAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF82
YTQ0MWY2MDVmMGM0MTdmYmNmYjQxMzg4NTNlNmU1YgAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAy
MDIxAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rpc3BsYXlO
YW1lEi5ORVQgRnJhbWV3b3JrIDQuNbQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5S
ZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFs
LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGlt
ZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAACUPgAAAAAAAAAAAACuPgAAACAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAoD4AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAA
AAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQ
AAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhA
AAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv
/gAAAQAAAAEAtl7CHgAAAQC2XsIePwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYA
YQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAA
ALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQA
YgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBh
AG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwA2AGEANAA0ADEAZgA2ADAANQBmADAAYwA0ADEANwBmAGIAYwBmAGIANAAxADMAOAA4ADUAMwBl
ADYAZQA1AGIAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwA4ADcA
NAAuADIANAAyADQANgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA2
AGEANAA0ADEAZgA2ADAANQBmADAAYwA0ADEANwBmAGIAYwBmAGIANAAxADMAOAA4ADUAMwBlADYA
ZQA1AGIALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUA
bQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAA
AFMAVABfADYAYQA0ADQAMQBmADYAMAA1AGYAMABjADQAMQA3AGYAYgBjAGYAYgA0ADEAMwA4ADgA
NQAzAGUANgBlADUAYgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABT
AFQAXwA2AGEANAA0ADEAZgA2ADAANQBmADAAYwA0ADEANwBmAGIAYwBmAGIANAAxADMAOAA4ADUA
MwBlADYAZQA1AGIAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAu
ADcAOAA3ADQALgAyADQAMgA0ADYAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADcAOAA3ADQALgAyADQAMgA0ADYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAwD4AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="208,41.6"
          Id="Package\Script Task"
          TopLeft="288.571433485771,90.235295383163" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>